# download_models.py
# Script pour t√©l√©charger les mod√®les RAVE pr√©-entra√Æn√©s
import os
import requests
from tqdm import tqdm

# URLs des mod√®les RAVE (√† adapter selon disponibilit√©)
MODEL_URLS = {
    "vintage": "https://github.com/acids-ircam/RAVE/releases/download/v2.3.0/vintage.ts",
    "percussion": "https://github.com/acids-ircam/RAVE/releases/download/v2.3.0/percussion.ts",
    "VCTK": "https://github.com/acids-ircam/RAVE/releases/download/v2.3.0/VCTK.ts",
    # Ajouter d'autres URLs selon disponibilit√©
}

# Mapping pour votre application
MODEL_MAPPING = {
    "vintage": "Jazz.ts",
    "percussion": "Darbouka.ts", 
    "VCTK": "Vctk.ts",
    # Pour Cats et Dogs, vous devrez entra√Æner vos propres mod√®les
}

def download_file(url, filename):
    """T√©l√©charge un fichier avec barre de progression"""
    response = requests.get(url, stream=True)
    total_size = int(response.headers.get('content-length', 0))
    
    with open(filename, 'wb') as file:
        with tqdm(total=total_size, unit='iB', unit_scale=True) as pbar:
            for data in response.iter_content(chunk_size=1024):
                size = file.write(data)
                pbar.update(size)

def main():
    # Cr√©er le dossier models s'il n'existe pas
    os.makedirs('models', exist_ok=True)
    
    print("üéµ T√©l√©chargement des mod√®les RAVE...")
    print("=" * 50)
    
    for model_name, url in MODEL_URLS.items():
        output_name = MODEL_MAPPING.get(model_name, f"{model_name}.ts")
        output_path = os.path.join('models', output_name)
        
        if os.path.exists(output_path):
            print(f"‚úÖ {output_name} existe d√©j√†")
            continue
        
        print(f"\nüì• T√©l√©chargement de {model_name}...")
        try:
            download_file(url, output_path)
            print(f"‚úÖ {output_name} t√©l√©charg√© avec succ√®s")
        except Exception as e:
            print(f"‚ùå Erreur t√©l√©chargement {model_name}: {e}")
    
    print("\n" + "=" * 50)
    print("üìã Mod√®les disponibles:")
    for f in os.listdir('models'):
        if f.endswith('.ts'):
            size = os.path.getsize(os.path.join('models', f)) / (1024*1024)
            print(f"  - {f} ({size:.1f} MB)")
    
    # Instructions pour les mod√®les manquants
    print("\n‚ö†Ô∏è  Pour les mod√®les Cats et Dogs:")
    print("   Vous devez les entra√Æner vous-m√™me avec RAVE")
    print("   ou utiliser des mod√®les de substitution")

if __name__ == "__main__":
    main()